---
import { eq } from "astro:db";
import { db, comment, desc } from "astro:db";
import { formatDistanceToNow } from "date-fns";

const comments = await db
	.select({
		id: comment.id,
		author: comment.author,
		body: comment.body,
		created_at: comment.created_at,
		owns_comment: eq(comment.author_ip, Astro.clientAddress),
	})
	.from(comment)
	.orderBy(desc(comment.created_at))
	.limit(26);
---

<ul class="flex flex-col gap-4">
	{
		comments.slice(0, 25).map(({ id, author, body, created_at, owns_comment }) => (
			<li class="overflow-hidden">
				<p class="border-l-2 border-l-red pl-2 text-whitest overflow-ellipsis overflow-hidden">
					{body}
				</p>
				<p class="italic hyphens-auto whitespace-nowrap flex gap-1.5">
					<span aria-hidden>-</span>
					<span class="overflow-ellipsis overflow-hidden">{author}</span>
					<span aria-hidden>Â·</span>
					<span>{formatDistanceToNow(created_at)} ago</span>
				</p>
				{!!owns_comment && (
					<button
						class="bg-red px-4 py-2 text-whitest rounded cursor-pointer"
						hx-post="/api/delete_comment"
						hx-vals={JSON.stringify({ comment_id: id })}
						hx-target="#comments"
						hx-swap="innerHTML"
					>
						delete
					</button>
				)}
			</li>
		))
	}
	{comments.length > 25 && <p class="italic">... older comments hidden</p>}
</ul>
